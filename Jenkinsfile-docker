pipeline {
    agent {
        dockerfile {
        filename 'Dockerfile'
        //dir 'build'
        //label 'my-defined-label'
        additionalBuildArgs  '-t linux-maven-openjdk-sbom-tools'
        //args '--privileged -v /root/.m2:/root/.m2 -u root'
    }
        //docker {
        //    image 'linux-maven-openjdk-sbom-tools' 
        //    args '--privileged -v /root/.m2:/root/.m2 -u root' //-v /cache -v /var/run/docker.sock:/var/run/docker.sock
        //}
    }
    environment {
        HOME_WORKSPACE = "${WORKSPACE}"
        PATH = "${WORKSPACE}" 
    }
    stages {
        stage('Preparation') {
            steps {
                sh "chmod +x -R ${WORKSPACE}"
                //sh "chmod +x -R ."
                //sh "export PATH=$PATH:${WORKSPACE}/"
                //echo "PATH="
                //sh "${WORKSPACE}"
            }
        }
        stage('Build') { 
            steps {
                sh 'mvn -B -DskipTests clean install' 
            }
        }
        stage('Test') {
            steps {
                sh 'mvn test'
            }
            post {
                always {
                    junit 'target/surefire-reports/*.xml'
                }
            }
        }
        stage ('Generate SBOM') {
            steps{
                //sh "./jenkins/scripts/install.sh"
                sh "./jenkins/scripts/exec.sh"
                //snykSecurity(
                //    snykInstallation: 'snyk',
                //    snykTokenId: 'snyk_api',
                //    additionalArguments: '--all-projects --print-deps --show-vulnerable-paths=some --prune-repeated-subdependencies --json',
                //    // place other parameters here
                //)
             }
        }
        stage('Deliver') {
            steps {
                sh './jenkins/scripts/deliver.sh'
            }
        }
    }
}
